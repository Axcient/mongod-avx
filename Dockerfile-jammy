FROM ubuntu:jammy AS build

ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring

ARG NUM_CORES

RUN apt-get clean && apt-get update

RUN apt-get install -y \
    tzdata \
    software-properties-common \
    manpages-dev \
    build-essential \
    libcurl4-openssl-dev \
    libssl-dev \
    liblzma-dev \
    python3 \
    python3-venv \
    python-dev-is-python3 \
    python3-pip \
    git \
    wget \
    tar \
    lld

# Create and navigate to the src directory
RUN mkdir /src
WORKDIR /src

COPY . /src

RUN git submodule update --init --remote --checkout mongo \
    && cd mongo \
    && git checkout r8.0.4

WORKDIR /src/mongo

# Apply patches
COPY patches/*.patch /src/mongo
RUN for patch in $(ls *.patch | sort); do patch -p0 < $patch; done

# Set up Python virtual environment and install requirements
RUN python3 -m venv .venv --prompt mongo && . .venv/bin/activate
RUN pip install 'poetry==1.5.1'
RUN poetry install --no-root --sync

# Build MongoDB
RUN . .venv/bin/activate && \
    python3 buildscripts/scons.py install-mongod \
    -j$NUM_CORES \
    --release \
    --dbg=off \
    --disable-warnings-as-errors \
    --experimental-optimization=-sandybridge \
     CCFLAGS="-march=nehalem"


RUN mkdir -p /tmp/output && \
    cd build/install/bin/ && \
    cp mongod /tmp/output/mongod

RUN cd /tmp/output && \
    zip -r mongod.zip mongod
