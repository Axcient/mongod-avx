FROM ubuntu:focal AS build

ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring

ARG NUM_CORES

RUN apt-get clean && apt-get update

RUN apt-get install -y \
    tzdata \
    software-properties-common \
    manpages-dev \
    build-essential \
    libcurl4-openssl-dev \
    libssl-dev \
    liblzma-dev \
    python3 \
    python3-venv \
    python-dev-is-python3 \
    python3-pip \
    git \
    wget \
    tar \
    zip \
    lld

RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys BA6932366A755776
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 2C277A0A352154E5

RUN echo "deb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu focal main" > /etc/apt/sources.list.d/deadsnakes.list
RUN echo "deb http://ppa.launchpadcontent.net/ubuntu-toolchain-r/test/ubuntu focal main" > /etc/apt/sources.list.d/ubuntu-toolchain-r.list

RUN apt-get update

RUN apt install -y gcc-11  \
    g++-11  \
    python3.10  \
    python3.10-venv  \
    python3.10-dev

RUN update-alternatives --remove-all cpp
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9 --slave /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-9 --slave /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-9  --slave /usr/bin/cpp cpp /usr/bin/cpp-9
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110 --slave /usr/bin/g++ g++ /usr/bin/g++-11 --slave /usr/bin/gcov gcov /usr/bin/gcov-11 --slave /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-11 --slave /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-11  --slave /usr/bin/cpp cpp /usr/bin/cpp-11

RUN mkdir /src
WORKDIR /src

COPY . /src


RUN git submodule update --init --remote --checkout mongo \
    && cd mongo \
    && git checkout r8.0.4

WORKDIR /src/mongo

# Apply patches
COPY patches/*.patch /src/mongo
RUN for patch in $(ls *.patch | sort); do patch -p0 < $patch; done

# Set up Python virtual environment and install requirements
RUN python3.10 -m venv .venv --prompt mongo && . .venv/bin/activate
RUN pip install 'poetry==1.5.1'
RUN poetry install --no-root --sync

# Build MongoDB
RUN . .venv/bin/activate && \
    python3 buildscripts/scons.py install-mongod \
    -j$NUM_CORES \
    --release \
    --dbg=off \
    --disable-warnings-as-errors \
    --experimental-optimization=-sandybridge \
     CCFLAGS="-march=nehalem"

RUN mkdir -p /tmp/output && \
    cd build/install/bin/ && \
    cp mongod /tmp/output/mongod && \
    cp /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.32 /tmp/output/libstdc++.so.6


RUN cd /tmp/output && \
    zip -r mongod.zip mongod libstdc++.so.6

